#!/usr/bin/env bash

# global for error reporting
ASDF_MAVEN_ERROR=""

# Download Maven source from Apache, build, copy files and cleanup.
install_maven() {
	local version=$1
	local destdir=$2

	get_maven $version "$destdir"
	[[ -z "$ASDF_MAVEN_ERROR" ]] || return

	build_copy_cleanup $version "$destdir"
}

# Function to compare versions
version_lt() {
	# returns 0 (true) if first version is less than second version, otherwise 1 (false)
	[ "$(printf '%s\n' "$1" "$2" | sort -V | head -n1)" != "$2" ]
}

# Download Maven source from Apache
get_maven() {
	local version=$1
	local destdir=$2

	local major=$(echo $version | cut -d '.' -f 1)
	local base="http://dlcdn.apache.org/maven"

	# Set base URL conditionally based on version
	if version_lt "$version" "3.8.8"; then
		base="https://archive.apache.org/dist/maven"
	fi

	local url="$base/maven-$major/$version/binaries/apache-maven-$version-bin.tar.gz"

	if [[ "$version" == *SNAPSHOT ]]; then
		local url="https://repository.apache.org/service/local/artifact/maven/redirect?r=snapshots&g=org.apache.maven&a=apache-maven&v=$version&e=tar.gz&c=bin"
	fi

	curl -fLC - --retry 3 --retry-delay 3 -o "$destdir/$version.tar.gz" "$url"
	if [ ! $? -eq 0 ]; then
		ASDF_MAVEN_ERROR="Could not download $url. Perhaps the version of Maven you're trying to install does not exist"
	fi
}

# Build Maven, copy files and cleanup.
build_copy_cleanup() {
	local version=$1
	local destdir=$2

	local origin=$(pwd)
	cd "$destdir"; {
		tar xzvf $version.tar.gz
		rm $version.tar.gz

		mv apache-maven-$version/* .
		rmdir apache-maven-$version
	}
	cd "$origin"
}

#
# MAIN
#
install_maven $ASDF_INSTALL_VERSION "$ASDF_INSTALL_PATH"

if [ -n "$ASDF_MAVEN_ERROR" ]; then
	echo "ERROR: $ASDF_MAVEN_ERROR." > /dev/stderr
	unset ASDF_MAVEN_ERROR
	exit 1
fi
